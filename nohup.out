torch:  2.0 ; cuda:  cu117
detectron2: 0.6
Initial GPU Usage: 

| ID | GPU | MEM |
------------------
|  0 |  0% |  0% |
|  1 |  0% |  0% |
|  2 |  0% |  0% |
|  3 |  0% |  0% |
GPU Usage after emptying the cache: 

| ID | GPU | MEM |
------------------
|  0 |  0% |  0% |
|  1 |  0% |  0% |
|  2 |  0% |  0% |
|  3 |  0% |  0% |
COMET INFO: Experiment is live on comet.com https://www.comet.com/syx/hslu-computer-vision/c81685b5ff6a4466b6434259c8638ca2


Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.


Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

Class Distribution (before sampling): {'facade': 0.03881188118811881, 'balcony-fence': 0.10233663366336633, 'car': 0.018059405940594058, 'fence': 0.015603960396039604, 'non-building-infrastructure': 0.012198019801980198, 'shop': 0.009742574257425743, 'street': 0.019643564356435644, 'traffic-infrastructure': 0.01615841584158416, 'vegetation': 0.07057425742574257, 'window': 0.6968712871287128}
Class Distribution (after sampling): {'facade': 0.03881188118811881, 'balcony-fence': 0.10233663366336633, 'car': 0.018059405940594058, 'fence': 0.015603960396039604, 'non-building-infrastructure': 0.012198019801980198, 'shop': 0.009742574257425743, 'street': 0.019643564356435644, 'traffic-infrastructure': 0.01615841584158416, 'vegetation': 0.07057425742574257, 'window': 0.6968712871287128}
[09/28 18:16:56 d2.engine.defaults]: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=12, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=44, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 11, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
WARNING [09/28 18:16:56 d2.data.datasets.coco]: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/28 18:16:56 d2.data.datasets.coco]: Loaded 407 images in COCO format from ../../data/unzipped/facade-original-coco-segmentation/train/_annotations.coco.json
[09/28 18:16:56 d2.data.build]: Removed 0 images with no usable annotations. 407 images left.
[09/28 18:16:56 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |   category    | #instances   |   category    | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|   facade   | 0            | balcony-fence | 1292         |      car      | 228          |
|   facade   | 490          |     fence     | 197          | non-buildin.. | 154          |
|    shop    | 123          |    street     | 248          | traffic-inf.. | 204          |
| vegetation | 891          |    window     | 8798         |               |              |
|   total    | 12625        |               |              |               |              |
[09/28 18:16:56 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/28 18:16:56 d2.data.build]: Using training sampler RepeatFactorTrainingSampler
[09/28 18:16:56 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 18:16:56 d2.data.common]: Serializing 407 elements to byte tensors and concatenating them all ...
[09/28 18:16:56 d2.data.common]: Serialized dataset takes 3.50 MiB
[09/28 18:16:56 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_X_101_32x8d_FPN_3x/139653917/model_final_2d9806.pkl ...
Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 1024) in the checkpoint but (12, 1024) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (12,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 1024) in the checkpoint but (44, 1024) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (44,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.mask_head.predictor.weight' to the model due to incompatible shapes: (80, 256, 1, 1) in the checkpoint but (11, 256, 1, 1) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.mask_head.predictor.bias' to the model due to incompatible shapes: (80,) in the checkpoint but (11,) in the model! You might want to double check if this is expected.
Some model parameters or buffers are not found in the checkpoint:
roi_heads.box_predictor.bbox_pred.{bias, weight}
roi_heads.box_predictor.cls_score.{bias, weight}
roi_heads.mask_head.predictor.{bias, weight}
[09/28 18:16:57 d2.engine.train_loop]: Starting training from iteration 0
/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[09/28 18:17:37 d2.utils.events]:  eta: 0:01:00  iter: 19  total_loss: 3.723  loss_cls: 1.781  loss_box_reg: 0.737  loss_mask: 0.6489  loss_rpn_cls: 0.3053  loss_rpn_loc: 0.295    time: 1.8942  last_time: 2.0368  data_time: 0.0309  last_data_time: 0.0170   lr: 0.00095155  max_mem: 7032M
[09/28 18:18:15 d2.utils.events]:  eta: 0:00:20  iter: 39  total_loss: 2.274  loss_cls: 0.7137  loss_box_reg: 0.7418  loss_mask: 0.4249  loss_rpn_cls: 0.1711  loss_rpn_loc: 0.2335    time: 1.8954  last_time: 1.7684  data_time: 0.0136  last_data_time: 0.0190   lr: 0.0019506  max_mem: 7032M
[09/28 18:18:37 d2.utils.events]:  eta: 0:00:00  iter: 49  total_loss: 2.084  loss_cls: 0.5948  loss_box_reg: 0.6863  loss_mask: 0.3684  loss_rpn_cls: 0.1661  loss_rpn_loc: 0.2539    time: 1.8918  last_time: 1.7789  data_time: 0.0128  last_data_time: 0.0160   lr: 0.0024501  max_mem: 7032M
[09/28 18:18:37 d2.engine.hooks]: Overall training speed: 48 iterations in 0:01:30 (1.8918 s / it)
[09/28 18:18:37 d2.engine.hooks]: Total training time: 0:01:34 (0:00:04 on hooks)
WARNING [09/28 18:18:37 d2.data.datasets.coco]: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/28 18:18:37 d2.data.datasets.coco]: Loaded 108 images in COCO format from ../../data/unzipped/facade-original-coco-segmentation/valid/_annotations.coco.json
[09/28 18:18:37 d2.data.build]: Distribution of instances among all 11 categories:
|  category  | #instances   |   category    | #instances   |   category    | #instances   |
|:----------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|   facade   | 0            | balcony-fence | 381          |      car      | 60           |
|   facade   | 136          |     fence     | 42           | non-buildin.. | 40           |
|    shop    | 31           |    street     | 66           | traffic-inf.. | 64           |
| vegetation | 243          |    window     | 2786         |               |              |
|   total    | 3849         |               |              |               |              |
[09/28 18:18:37 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/28 18:18:37 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/28 18:18:37 d2.data.common]: Serializing 108 elements to byte tensors and concatenating them all ...
[09/28 18:18:37 d2.data.common]: Serialized dataset takes 1.00 MiB
WARNING [09/28 18:18:37 d2.evaluation.coco_evaluation]: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[09/28 18:18:38 d2.evaluation.evaluator]: Start inference on 108 batches
[09/28 18:18:44 d2.evaluation.evaluator]: Inference done 11/108. Dataloading: 0.0019 s/iter. Inference: 0.2161 s/iter. Eval: 0.2697 s/iter. Total: 0.4878 s/iter. ETA=0:00:47
[09/28 18:18:49 d2.evaluation.evaluator]: Inference done 21/108. Dataloading: 0.0016 s/iter. Inference: 0.2173 s/iter. Eval: 0.2820 s/iter. Total: 0.5009 s/iter. ETA=0:00:43
[09/28 18:18:54 d2.evaluation.evaluator]: Inference done 31/108. Dataloading: 0.0017 s/iter. Inference: 0.2168 s/iter. Eval: 0.2914 s/iter. Total: 0.5100 s/iter. ETA=0:00:39
[09/28 18:18:59 d2.evaluation.evaluator]: Inference done 41/108. Dataloading: 0.0018 s/iter. Inference: 0.2167 s/iter. Eval: 0.2976 s/iter. Total: 0.5162 s/iter. ETA=0:00:34
[09/28 18:19:05 d2.evaluation.evaluator]: Inference done 52/108. Dataloading: 0.0018 s/iter. Inference: 0.2163 s/iter. Eval: 0.2941 s/iter. Total: 0.5122 s/iter. ETA=0:00:28
[09/28 18:19:10 d2.evaluation.evaluator]: Inference done 62/108. Dataloading: 0.0020 s/iter. Inference: 0.2164 s/iter. Eval: 0.2982 s/iter. Total: 0.5167 s/iter. ETA=0:00:23
[09/28 18:19:15 d2.evaluation.evaluator]: Inference done 71/108. Dataloading: 0.0020 s/iter. Inference: 0.2166 s/iter. Eval: 0.3035 s/iter. Total: 0.5222 s/iter. ETA=0:00:19
[09/28 18:19:21 d2.evaluation.evaluator]: Inference done 81/108. Dataloading: 0.0021 s/iter. Inference: 0.2164 s/iter. Eval: 0.3059 s/iter. Total: 0.5245 s/iter. ETA=0:00:14
[09/28 18:19:26 d2.evaluation.evaluator]: Inference done 90/108. Dataloading: 0.0021 s/iter. Inference: 0.2165 s/iter. Eval: 0.3112 s/iter. Total: 0.5299 s/iter. ETA=0:00:09
[09/28 18:19:31 d2.evaluation.evaluator]: Inference done 99/108. Dataloading: 0.0020 s/iter. Inference: 0.2164 s/iter. Eval: 0.3156 s/iter. Total: 0.5342 s/iter. ETA=0:00:04
[09/28 18:19:36 d2.evaluation.evaluator]: Inference done 108/108. Dataloading: 0.0020 s/iter. Inference: 0.2161 s/iter. Eval: 0.3203 s/iter. Total: 0.5384 s/iter. ETA=0:00:00
[09/28 18:19:36 d2.evaluation.evaluator]: Total inference time: 0:00:55.563994 (0.539456 s / iter per device, on 1 devices)
[09/28 18:19:36 d2.evaluation.evaluator]: Total inference pure compute time: 0:00:22 (0.216103 s / iter per device, on 1 devices)
[09/28 18:19:37 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[09/28 18:19:37 d2.evaluation.coco_evaluation]: Saving results to ./output//eval/coco_instances_results.json
[09/28 18:19:37 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
[09/28 18:19:37 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[09/28 18:19:37 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.13 seconds.
[09/28 18:19:37 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[09/28 18:19:37 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.03 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.061
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.135
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.039
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.008
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.033
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.077
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.043
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.077
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.103
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.031
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.047
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.125
[09/28 18:19:37 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 6.150 | 13.500 | 3.872  | 0.817 | 3.263 | 7.711 |
[09/28 18:19:37 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category   | AP     | category      | AP     | category                    | AP    |
|:-----------|:-------|:--------------|:-------|:----------------------------|:------|
| facade     | nan    | balcony-fence | 0.027  | car                         | 0.153 |
| facade     | 27.498 | fence         | 0.077  | non-building-infrastructure | 0.000 |
| shop       | 0.146  | street        | 1.578  | traffic-infrastructure      | 0.000 |
| vegetation | 2.230  | window        | 29.788 |                             |       |
Loading and preparing results...
DONE (t=0.14s)
creating index...
index created!
[09/28 18:19:37 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[09/28 18:19:38 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 0.51 seconds.
[09/28 18:19:38 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[09/28 18:19:38 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.03 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.053
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.125
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.034
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.032
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.073
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.032
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.063
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.088
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.027
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.048
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.110
[09/28 18:19:38 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 5.299 | 12.508 | 3.428  | 0.531 | 3.228 | 7.277 |
[09/28 18:19:38 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category   | AP     | category      | AP     | category                    | AP    |
|:-----------|:-------|:--------------|:-------|:----------------------------|:------|
| facade     | nan    | balcony-fence | 0.005  | car                         | 0.187 |
| facade     | 20.418 | fence         | 0.000  | non-building-infrastructure | 0.000 |
| shop       | 0.044  | street        | 0.594  | traffic-infrastructure      | 0.000 |
| vegetation | 1.821  | window        | 29.923 |                             |       |
[09/28 18:19:38 d2.engine.defaults]: Evaluation results for facade_valid_city in csv format:
[09/28 18:19:38 d2.evaluation.testing]: copypaste: Task: bbox
[09/28 18:19:38 d2.evaluation.testing]: copypaste: AP,AP50,AP75,APs,APm,APl
[09/28 18:19:38 d2.evaluation.testing]: copypaste: 6.1496,13.5000,3.8716,0.8170,3.2632,7.7112
[09/28 18:19:38 d2.evaluation.testing]: copypaste: Task: segm
[09/28 18:19:38 d2.evaluation.testing]: copypaste: AP,AP50,AP75,APs,APm,APl
[09/28 18:19:38 d2.evaluation.testing]: copypaste: 5.2991,12.5080,3.4277,0.5305,3.2279,7.2773
Traceback (most recent call last):
  File "/home/ubuntu/code/hslu-cv-facades/mask-r-cnn/train_base.py", line 165, in <module>
    main()
  File "/home/ubuntu/code/hslu-cv-facades/mask-r-cnn/train_base.py", line 153, in main
    trainer.train()
  File "/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 484, in train
    super().train(self.start_iter, self.max_iter)
  File "/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 165, in train
    self.after_train()
  File "/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 174, in after_train
    h.after_train()
  File "/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/detectron2/engine/hooks.py", line 561, in after_train
    self._do_eval()
  File "/home/ubuntu/miniconda3/envs/venv-detectron2/lib/python3.10/site-packages/detectron2/engine/hooks.py", line 529, in _do_eval
    results = self._func()
  File "/home/ubuntu/code/hslu-cv-facades/mask-r-cnn/train_base.py", line 149, in <lambda>
    trainer.register_hooks([hooks.EvalHook(100, lambda: trainer.evaluate_metrics(cfg, trainer.model))])
  File "/home/ubuntu/code/hslu-cv-facades/mask-r-cnn/comet_trainer.py", line 72, in evaluate_metrics
    evaluators = [
  File "/home/ubuntu/code/hslu-cv-facades/mask-r-cnn/comet_trainer.py", line 73, in <listcomp>
    self.build_evaluator(cfg, name, output_folder=os.path.join(cfg.OUTPUT_DIR, "evaluation"))
TypeError: CometDefaultTrainer.build_evaluator() got multiple values for argument 'output_folder'
COMET INFO: ---------------------------------------------------------------------------------------
COMET INFO: Comet.ml Experiment Summary
COMET INFO: ---------------------------------------------------------------------------------------
COMET INFO:   Data:
COMET INFO:     display_summary_level : 1
COMET INFO:     url                   : https://www.comet.com/syx/hslu-computer-vision/c81685b5ff6a4466b6434259c8638ca2
COMET INFO:   Metrics [count] (min, max):
COMET INFO:     _loss_box_reg [50]                  : (0.48590829968452454, 0.8151229023933411)
COMET INFO:     _loss_cls [50]                      : (0.4401301145553589, 2.520362138748169)
COMET INFO:     _loss_mask [50]                     : (0.2581935524940491, 0.692383885383606)
COMET INFO:     _loss_rpn_cls [50]                  : (0.1022079661488533, 3.8493828773498535)
COMET INFO:     _loss_rpn_loc [50]                  : (0.17777250707149506, 0.5158147215843201)
COMET INFO:     bbox/AP                             : 6.149550219007911
COMET INFO:     bbox/AP-balcony-fence               : 0.0265953445789554
COMET INFO:     bbox/AP-car                         : 0.15275813295615276
COMET INFO:     bbox/AP-facade                      : 27.49776443468982
COMET INFO:     bbox/AP-fence                       : 0.07698193706958517
COMET INFO:     bbox/AP-non-building-infrastructure : 0.0
COMET INFO:     bbox/AP-shop                        : 0.14551455145514552
COMET INFO:     bbox/AP-street                      : 1.5775577557755776
COMET INFO:     bbox/AP-traffic-infrastructure      : 0.0
COMET INFO:     bbox/AP-vegetation                  : 2.2301964947749746
COMET INFO:     bbox/AP-window                      : 29.78813353877891
COMET INFO:     bbox/AP50                           : 13.500028203535456
COMET INFO:     bbox/AP75                           : 3.8715810360798493
COMET INFO:     bbox/APl                            : 7.711157764512685
COMET INFO:     bbox/APm                            : 3.263187121765871
COMET INFO:     bbox/APs                            : 0.8169870512379286
COMET INFO:     data_time [3]                       : (0.011184254544787109, 0.0133164954604581)
COMET INFO:     eta_seconds [3]                     : (0.0, 60.11741290683858)
COMET INFO:     fast_rcnn/cls_accuracy [3]          : (0.75, 0.8271484375)
COMET INFO:     fast_rcnn/false_negative [3]        : (0.50625, 1.0)
COMET INFO:     fast_rcnn/fg_cls_accuracy [3]       : (0.0, 0.451171875)
COMET INFO:     loss [5]                            : (2.0444905757904053, 6.479745388031006)
COMET INFO:     loss_box_reg [3]                    : (0.686291366815567, 0.7417541146278381)
COMET INFO:     loss_cls [3]                        : (0.5947768688201904, 1.780711054801941)
COMET INFO:     loss_mask [3]                       : (0.36843881011009216, 0.6488716006278992)
COMET INFO:     loss_rpn_cls [3]                    : (0.16613595932722092, 0.30530041456222534)
COMET INFO:     loss_rpn_loc [3]                    : (0.23350512236356735, 0.29500187933444977)
COMET INFO:     lr [3]                              : (0.00095155, 0.00245005)
COMET INFO:     mask_rcnn/accuracy [3]              : (0.6753328284438775, 0.8465508078231292)
COMET INFO:     mask_rcnn/false_negative [3]        : (0.03623508673605777, 0.056009929132170684)
COMET INFO:     mask_rcnn/false_positive [3]        : (0.3368395045233868, 0.8446874463957762)
COMET INFO:     roi_head/num_bg_samples             : 192.0
COMET INFO:     roi_head/num_fg_samples             : 64.0
COMET INFO:     rpn/num_neg_anchors [3]             : (146.25, 147.75)
COMET INFO:     rpn/num_pos_anchors [3]             : (108.25, 109.75)
COMET INFO:     segm/AP                             : 5.299071416474559
COMET INFO:     segm/AP-balcony-fence               : 0.004632042151583579
COMET INFO:     segm/AP-car                         : 0.18704727615618705
COMET INFO:     segm/AP-facade                      : 20.417655858967247
COMET INFO:     segm/AP-fence                       : 0.0
COMET INFO:     segm/AP-non-building-infrastructure : 0.0
COMET INFO:     segm/AP-shop                        : 0.044004400440044
COMET INFO:     segm/AP-street                      : 0.594059405940594
COMET INFO:     segm/AP-traffic-infrastructure      : 0.0
COMET INFO:     segm/AP-vegetation                  : 1.8205473064004694
COMET INFO:     segm/AP-window                      : 29.92276787468946
COMET INFO:     segm/AP50                           : 12.507954891067408
COMET INFO:     segm/AP75                           : 3.427748450658498
COMET INFO:     segm/APl                            : 7.277327240233573
COMET INFO:     segm/APm                            : 3.2279105635203886
COMET INFO:     segm/APs                            : 0.5305231782848391
COMET INFO:     time [3]                            : (1.8594811614602804, 2.003913763561286)
COMET INFO:     total_loss [53]                     : (1.5537721067667007, 8.064854115247726)
COMET INFO:   Parameters:
COMET INFO:     CUDNN_BENCHMARK                                             : False
COMET INFO:     DATALOADER-ASPECT_RATIO_GROUPING                            : True
COMET INFO:     DATALOADER-FILTER_EMPTY_ANNOTATIONS                         : True
COMET INFO:     DATALOADER-NUM_WORKERS                                      : 8
COMET INFO:     DATALOADER-REPEAT_THRESHOLD                                 : 1.0
COMET INFO:     DATALOADER-SAMPLER_TRAIN                                    : RepeatFactorTrainingSampler
COMET INFO:     DATASETS-PRECOMPUTED_PROPOSAL_TOPK_TEST                     : 1000
COMET INFO:     DATASETS-PRECOMPUTED_PROPOSAL_TOPK_TRAIN                    : 2000
COMET INFO:     DATASETS-PROPOSAL_FILES_TEST                                : ()
COMET INFO:     DATASETS-PROPOSAL_FILES_TRAIN                               : ()
COMET INFO:     DATASETS-TEST                                               : ('facade_valid_city',)
COMET INFO:     DATASETS-TRAIN                                              : ('facade_train_city',)
COMET INFO:     GLOBAL-HACK                                                 : 1.0
COMET INFO:     INPUT-CROP-ENABLED                                          : False
COMET INFO:     INPUT-CROP-SIZE                                             : [0.9, 0.9]
COMET INFO:     INPUT-CROP-TYPE                                             : relative_range
COMET INFO:     INPUT-FORMAT                                                : BGR
COMET INFO:     INPUT-MASK_FORMAT                                           : polygon
COMET INFO:     INPUT-MAX_SIZE_TEST                                         : 1333
COMET INFO:     INPUT-MAX_SIZE_TRAIN                                        : 1333
COMET INFO:     INPUT-MIN_SIZE_TEST                                         : 800
COMET INFO:     INPUT-MIN_SIZE_TRAIN                                        : (640, 672, 704, 736, 768, 800)
COMET INFO:     INPUT-MIN_SIZE_TRAIN_SAMPLING                               : choice
COMET INFO:     INPUT-RANDOM_FLIP                                           : horizontal
COMET INFO:     MODEL-ANCHOR_GENERATOR-ANGLES                               : [[-90, 0, 90]]
COMET INFO:     MODEL-ANCHOR_GENERATOR-ASPECT_RATIOS                        : [[0.5, 1.0, 2.0]]
COMET INFO:     MODEL-ANCHOR_GENERATOR-NAME                                 : DefaultAnchorGenerator
COMET INFO:     MODEL-ANCHOR_GENERATOR-OFFSET                               : 0.0
COMET INFO:     MODEL-ANCHOR_GENERATOR-SIZES                                : [[32], [64], [128], [256], [512]]
COMET INFO:     MODEL-BACKBONE-FREEZE_AT                                    : 2
COMET INFO:     MODEL-BACKBONE-NAME                                         : build_resnet_fpn_backbone
COMET INFO:     MODEL-DEVICE                                                : cuda
COMET INFO:     MODEL-FPN-FUSE_TYPE                                         : sum
COMET INFO:     MODEL-FPN-IN_FEATURES                                       : ['res2', 'res3', 'res4', 'res5']
COMET INFO:     MODEL-FPN-NORM                                              : 
COMET INFO:     MODEL-FPN-OUT_CHANNELS                                      : 256
COMET INFO:     MODEL-KEYPOINT_ON                                           : False
COMET INFO:     MODEL-LOAD_PROPOSALS                                        : False
COMET INFO:     MODEL-MASK_ON                                               : True
COMET INFO:     MODEL-META_ARCHITECTURE                                     : GeneralizedRCNN
COMET INFO:     MODEL-PANOPTIC_FPN-COMBINE-ENABLED                          : True
COMET INFO:     MODEL-PANOPTIC_FPN-COMBINE-INSTANCES_CONFIDENCE_THRESH      : 0.5
COMET INFO:     MODEL-PANOPTIC_FPN-COMBINE-OVERLAP_THRESH                   : 0.5
COMET INFO:     MODEL-PANOPTIC_FPN-COMBINE-STUFF_AREA_LIMIT                 : 4096
COMET INFO:     MODEL-PANOPTIC_FPN-INSTANCE_LOSS_WEIGHT                     : 1.0
COMET INFO:     MODEL-PIXEL_MEAN                                            : [103.53, 116.28, 123.675]
COMET INFO:     MODEL-PIXEL_STD                                             : [57.375, 57.12, 58.395]
COMET INFO:     MODEL-PROPOSAL_GENERATOR-MIN_SIZE                           : 0
COMET INFO:     MODEL-PROPOSAL_GENERATOR-NAME                               : RPN
COMET INFO:     MODEL-RESNETS-DEFORM_MODULATED                              : False
COMET INFO:     MODEL-RESNETS-DEFORM_NUM_GROUPS                             : 1
COMET INFO:     MODEL-RESNETS-DEFORM_ON_PER_STAGE                           : [False, False, False, False]
COMET INFO:     MODEL-RESNETS-DEPTH                                         : 101
COMET INFO:     MODEL-RESNETS-NORM                                          : FrozenBN
COMET INFO:     MODEL-RESNETS-NUM_GROUPS                                    : 32
COMET INFO:     MODEL-RESNETS-OUT_FEATURES                                  : ['res2', 'res3', 'res4', 'res5']
COMET INFO:     MODEL-RESNETS-RES2_OUT_CHANNELS                             : 256
COMET INFO:     MODEL-RESNETS-RES5_DILATION                                 : 1
COMET INFO:     MODEL-RESNETS-STEM_OUT_CHANNELS                             : 64
COMET INFO:     MODEL-RESNETS-STRIDE_IN_1X1                                 : False
COMET INFO:     MODEL-RESNETS-WIDTH_PER_GROUP                               : 8
COMET INFO:     MODEL-RETINANET-BBOX_REG_LOSS_TYPE                          : smooth_l1
COMET INFO:     MODEL-RETINANET-BBOX_REG_WEIGHTS                            : (1.0, 1.0, 1.0, 1.0)
COMET INFO:     MODEL-RETINANET-FOCAL_LOSS_ALPHA                            : 0.25
COMET INFO:     MODEL-RETINANET-FOCAL_LOSS_GAMMA                            : 2.0
COMET INFO:     MODEL-RETINANET-IN_FEATURES                                 : ['p3', 'p4', 'p5', 'p6', 'p7']
COMET INFO:     MODEL-RETINANET-IOU_LABELS                                  : [0, -1, 1]
COMET INFO:     MODEL-RETINANET-IOU_THRESHOLDS                              : [0.4, 0.5]
COMET INFO:     MODEL-RETINANET-NMS_THRESH_TEST                             : 0.5
COMET INFO:     MODEL-RETINANET-NORM                                        : 
COMET INFO:     MODEL-RETINANET-NUM_CLASSES                                 : 80
COMET INFO:     MODEL-RETINANET-NUM_CONVS                                   : 4
COMET INFO:     MODEL-RETINANET-PRIOR_PROB                                  : 0.01
COMET INFO:     MODEL-RETINANET-SCORE_THRESH_TEST                           : 0.05
COMET INFO:     MODEL-RETINANET-SMOOTH_L1_LOSS_BETA                         : 0.1
COMET INFO:     MODEL-RETINANET-TOPK_CANDIDATES_TEST                        : 1000
COMET INFO:     MODEL-ROI_BOX_CASCADE_HEAD-BBOX_REG_WEIGHTS                 : ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
COMET INFO:     MODEL-ROI_BOX_CASCADE_HEAD-IOUS                             : (0.5, 0.6, 0.7)
COMET INFO:     MODEL-ROI_BOX_HEAD-BBOX_REG_LOSS_TYPE                       : smooth_l1
COMET INFO:     MODEL-ROI_BOX_HEAD-BBOX_REG_LOSS_WEIGHT                     : 1.0
COMET INFO:     MODEL-ROI_BOX_HEAD-BBOX_REG_WEIGHTS                         : (10.0, 10.0, 5.0, 5.0)
COMET INFO:     MODEL-ROI_BOX_HEAD-CLS_AGNOSTIC_BBOX_REG                    : False
COMET INFO:     MODEL-ROI_BOX_HEAD-CONV_DIM                                 : 256
COMET INFO:     MODEL-ROI_BOX_HEAD-FC_DIM                                   : 1024
COMET INFO:     MODEL-ROI_BOX_HEAD-FED_LOSS_FREQ_WEIGHT_POWER               : 0.5
COMET INFO:     MODEL-ROI_BOX_HEAD-FED_LOSS_NUM_CLASSES                     : 50
COMET INFO:     MODEL-ROI_BOX_HEAD-NAME                                     : FastRCNNConvFCHead
COMET INFO:     MODEL-ROI_BOX_HEAD-NORM                                     : 
COMET INFO:     MODEL-ROI_BOX_HEAD-NUM_CONV                                 : 0
COMET INFO:     MODEL-ROI_BOX_HEAD-NUM_FC                                   : 2
COMET INFO:     MODEL-ROI_BOX_HEAD-POOLER_RESOLUTION                        : 7
COMET INFO:     MODEL-ROI_BOX_HEAD-POOLER_SAMPLING_RATIO                    : 0
COMET INFO:     MODEL-ROI_BOX_HEAD-POOLER_TYPE                              : ROIAlignV2
COMET INFO:     MODEL-ROI_BOX_HEAD-SMOOTH_L1_BETA                           : 0.0
COMET INFO:     MODEL-ROI_BOX_HEAD-TRAIN_ON_PRED_BOXES                      : False
COMET INFO:     MODEL-ROI_BOX_HEAD-USE_FED_LOSS                             : False
COMET INFO:     MODEL-ROI_BOX_HEAD-USE_SIGMOID_CE                           : False
COMET INFO:     MODEL-ROI_HEADS-BATCH_SIZE_PER_IMAGE                        : 256
COMET INFO:     MODEL-ROI_HEADS-IN_FEATURES                                 : ['p2', 'p3', 'p4', 'p5']
COMET INFO:     MODEL-ROI_HEADS-IOU_LABELS                                  : [0, 1]
COMET INFO:     MODEL-ROI_HEADS-IOU_THRESHOLDS                              : [0.5]
COMET INFO:     MODEL-ROI_HEADS-NAME                                        : StandardROIHeads
COMET INFO:     MODEL-ROI_HEADS-NMS_THRESH_TEST                             : 0.5
COMET INFO:     MODEL-ROI_HEADS-NUM_CLASSES                                 : 11
COMET INFO:     MODEL-ROI_HEADS-POSITIVE_FRACTION                           : 0.25
COMET INFO:     MODEL-ROI_HEADS-PROPOSAL_APPEND_GT                          : True
COMET INFO:     MODEL-ROI_HEADS-SCORE_THRESH_TEST                           : 0.05
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-CONV_DIMS                           : (512, 512, 512, 512, 512, 512, 512, 512)
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-LOSS_WEIGHT                         : 1.0
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-MIN_KEYPOINTS_PER_IMAGE             : 1
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-NAME                                : KRCNNConvDeconvUpsampleHead
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS : True
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-NUM_KEYPOINTS                       : 17
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-POOLER_RESOLUTION                   : 14
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-POOLER_SAMPLING_RATIO               : 0
COMET INFO:     MODEL-ROI_KEYPOINT_HEAD-POOLER_TYPE                         : ROIAlignV2
COMET INFO:     MODEL-ROI_MASK_HEAD-CLS_AGNOSTIC_MASK                       : False
COMET INFO:     MODEL-ROI_MASK_HEAD-CONV_DIM                                : 256
COMET INFO:     MODEL-ROI_MASK_HEAD-NAME                                    : MaskRCNNConvUpsampleHead
COMET INFO:     MODEL-ROI_MASK_HEAD-NORM                                    : 
COMET INFO:     MODEL-ROI_MASK_HEAD-NUM_CONV                                : 4
COMET INFO:     MODEL-ROI_MASK_HEAD-POOLER_RESOLUTION                       : 14
COMET INFO:     MODEL-ROI_MASK_HEAD-POOLER_SAMPLING_RATIO                   : 0
COMET INFO:     MODEL-ROI_MASK_HEAD-POOLER_TYPE                             : ROIAlignV2
COMET INFO:     MODEL-RPN-BATCH_SIZE_PER_IMAGE                              : 256
COMET INFO:     MODEL-RPN-BBOX_REG_LOSS_TYPE                                : smooth_l1
COMET INFO:     MODEL-RPN-BBOX_REG_LOSS_WEIGHT                              : 1.0
COMET INFO:     MODEL-RPN-BBOX_REG_WEIGHTS                                  : (1.0, 1.0, 1.0, 1.0)
COMET INFO:     MODEL-RPN-BOUNDARY_THRESH                                   : -1
COMET INFO:     MODEL-RPN-CONV_DIMS                                         : [-1]
COMET INFO:     MODEL-RPN-HEAD_NAME                                         : StandardRPNHead
COMET INFO:     MODEL-RPN-IN_FEATURES                                       : ['p2', 'p3', 'p4', 'p5', 'p6']
COMET INFO:     MODEL-RPN-IOU_LABELS                                        : [0, -1, 1]
COMET INFO:     MODEL-RPN-IOU_THRESHOLDS                                    : [0.3, 0.7]
COMET INFO:     MODEL-RPN-LOSS_WEIGHT                                       : 1.0
COMET INFO:     MODEL-RPN-NMS_THRESH                                        : 0.7
COMET INFO:     MODEL-RPN-POSITIVE_FRACTION                                 : 0.5
COMET INFO:     MODEL-RPN-POST_NMS_TOPK_TEST                                : 1000
COMET INFO:     MODEL-RPN-POST_NMS_TOPK_TRAIN                               : 1000
COMET INFO:     MODEL-RPN-PRE_NMS_TOPK_TEST                                 : 1000
COMET INFO:     MODEL-RPN-PRE_NMS_TOPK_TRAIN                                : 2000
COMET INFO:     MODEL-RPN-SMOOTH_L1_BETA                                    : 0.0
COMET INFO:     MODEL-SEM_SEG_HEAD-COMMON_STRIDE                            : 4
COMET INFO:     MODEL-SEM_SEG_HEAD-CONVS_DIM                                : 128
COMET INFO:     MODEL-SEM_SEG_HEAD-IGNORE_VALUE                             : 255
COMET INFO:     MODEL-SEM_SEG_HEAD-IN_FEATURES                              : ['p2', 'p3', 'p4', 'p5']
COMET INFO:     MODEL-SEM_SEG_HEAD-LOSS_WEIGHT                              : 1.0
COMET INFO:     MODEL-SEM_SEG_HEAD-NAME                                     : SemSegFPNHead
COMET INFO:     MODEL-SEM_SEG_HEAD-NORM                                     : GN
COMET INFO:     MODEL-SEM_SEG_HEAD-NUM_CLASSES                              : 54
COMET INFO:     MODEL-WEIGHTS                                               : https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_X_101_32x8d_FPN_3x/139653917/model_final_2d9806.pkl
COMET INFO:     OUTPUT_DIR                                                  : ./output/
COMET INFO:     SEED                                                        : -1
COMET INFO:     SOLVER-AMP-ENABLED                                          : False
COMET INFO:     SOLVER-BASE_LR                                              : 0.0025
COMET INFO:     SOLVER-BASE_LR_END                                          : 0.0
COMET INFO:     SOLVER-BIAS_LR_FACTOR                                       : 1.0
COMET INFO:     SOLVER-CHECKPOINT_PERIOD                                    : 5000
COMET INFO:     SOLVER-CLIP_GRADIENTS-CLIP_TYPE                             : value
COMET INFO:     SOLVER-CLIP_GRADIENTS-CLIP_VALUE                            : 1.0
COMET INFO:     SOLVER-CLIP_GRADIENTS-ENABLED                               : False
COMET INFO:     SOLVER-CLIP_GRADIENTS-NORM_TYPE                             : 2.0
COMET INFO:     SOLVER-GAMMA                                                : 0.1
COMET INFO:     SOLVER-IMS_PER_BATCH                                        : 4
COMET INFO:     SOLVER-LR_SCHEDULER_NAME                                    : WarmupMultiStepLR
COMET INFO:     SOLVER-MAX_ITER                                             : 50
COMET INFO:     SOLVER-MOMENTUM                                             : 0.9
COMET INFO:     SOLVER-NESTEROV                                             : False
COMET INFO:     SOLVER-NUM_DECAYS                                           : 3
COMET INFO:     SOLVER-REFERENCE_WORLD_SIZE                                 : 0
COMET INFO:     SOLVER-RESCALE_INTERVAL                                     : False
COMET INFO:     SOLVER-STEPS                                                : []
COMET INFO:     SOLVER-WARMUP_FACTOR                                        : 0.001
COMET INFO:     SOLVER-WARMUP_ITERS                                         : 1000
COMET INFO:     SOLVER-WARMUP_METHOD                                        : linear
COMET INFO:     SOLVER-WEIGHT_DECAY                                         : 0.0001
COMET INFO:     SOLVER-WEIGHT_DECAY_BIAS                                    : 1
COMET INFO:     SOLVER-WEIGHT_DECAY_NORM                                    : 0.0
COMET INFO:     TEST-AUG-ENABLED                                            : False
COMET INFO:     TEST-AUG-FLIP                                               : True
COMET INFO:     TEST-AUG-MAX_SIZE                                           : 4000
COMET INFO:     TEST-AUG-MIN_SIZES                                          : (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
COMET INFO:     TEST-DETECTIONS_PER_IMAGE                                   : 100
COMET INFO:     TEST-EVAL_PERIOD                                            : 0
COMET INFO:     TEST-EXPECTED_RESULTS                                       : []
COMET INFO:     TEST-KEYPOINT_OKS_SIGMAS                                    : []
COMET INFO:     TEST-PRECISE_BN-ENABLED                                     : False
COMET INFO:     TEST-PRECISE_BN-NUM_ITER                                    : 200
COMET INFO:     VERSION                                                     : 2
COMET INFO:     VIS_PERIOD                                                  : 0
COMET INFO:   Uploads:
COMET INFO:     conda-environment-definition : 1
COMET INFO:     conda-info                   : 1
COMET INFO:     conda-specification          : 1
COMET INFO:     environment details          : 1
COMET INFO:     filename                     : 1
COMET INFO:     git metadata                 : 1
COMET INFO:     git-patch (uncompressed)     : 1 (10.75 MB)
COMET INFO:     installed packages           : 1
COMET INFO:     model graph                  : 1
COMET INFO:     os packages                  : 1
COMET INFO:     source_code                  : 1 (6.88 KB)
COMET INFO: 
────────────────────────────── New Comet feature! ──────────────────────────────
Log your models to better track, deploy, share, and reproduce your work using: 'comet_ml.integration.pytorch.log_model'.
Learn more at: https://comet.com/docs/v2/pytorch_log_model

Hide this message by setting environment variable "COMET_DISABLE_ANNOUNCEMENT=1" 
────────────────────────────────────────────────────────────────────────────────
COMET INFO: Please wait for metadata to finish uploading (timeout is 3600 seconds)
